import org.gradle.api.tasks.testing.logging.TestExceptionFormat

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBoot}"
    id 'io.spring.dependency-management' version "${dependencyManagement}"
}

allprojects {
    group = 'com.batis'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    plugins.withType(JavaPlugin) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        }
    }
//    pluginManager.withPlugin('org.springframework.boot') {}
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    if (project.getParent().name == 'application' || project.name == 'benchmark') {
        dependencies {
            testImplementation('org.springframework.boot:spring-boot-starter-test') {
                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            }
        }
    } else {
        dependencies {
            testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
        }
    }

    test {
        useJUnitPlatform()
        testLogging.showStandardStreams(true)
        testLogging.exceptionFormat(TestExceptionFormat.FULL)
    }

    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    task hello {
        doLast {
            task ->
                println('-'.repeat(80) + '\n' + project.getParent().name + ':' + project.name)
                project.configurations.implementation.allDependencies.each {
                    item -> println(item.group + ':' + item.name + ':' + item.version)
                }
                project.configurations.implementation.getAllDependencies().withType(ProjectDependency).forEach {
                    item -> println(item.getDependencyProject().name)
                }
        }
    }
}

dependencies {
    implementation project(":application:boot")
    implementation project(":application:web")
    implementation project(":application:database")
    implementation project(":application:service")
    implementation project(":application:utils")
    implementation project(":library")
}

bootJar {
    enabled = true
}

springBoot{
    mainClassName = 'com.batis.application.AppApplication'
}